#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaEntidades
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BDRENDEVU")]
	public partial class EntidadesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAgendamientos(Agendamientos instance);
    partial void UpdateAgendamientos(Agendamientos instance);
    partial void DeleteAgendamientos(Agendamientos instance);
    partial void InsertCiudad(Ciudad instance);
    partial void UpdateCiudad(Ciudad instance);
    partial void DeleteCiudad(Ciudad instance);
    partial void InsertIdioma(Idioma instance);
    partial void UpdateIdioma(Idioma instance);
    partial void DeleteIdioma(Idioma instance);
    partial void InsertNivel(Nivel instance);
    partial void UpdateNivel(Nivel instance);
    partial void DeleteNivel(Nivel instance);
    partial void InsertPermisos(Permisos instance);
    partial void UpdatePermisos(Permisos instance);
    partial void DeletePermisos(Permisos instance);
    partial void InsertRoles(Roles instance);
    partial void UpdateRoles(Roles instance);
    partial void DeleteRoles(Roles instance);
    partial void InsertSalones(Salones instance);
    partial void UpdateSalones(Salones instance);
    partial void DeleteSalones(Salones instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    #endregion
		
		public EntidadesDataContext() : 
				base(global::CapaEntidades.Properties.Settings.Default.BDRENDEVUConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EntidadesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EntidadesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EntidadesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EntidadesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Agendamientos> Agendamientos
		{
			get
			{
				return this.GetTable<Agendamientos>();
			}
		}
		
		public System.Data.Linq.Table<UsuRol> UsuRol
		{
			get
			{
				return this.GetTable<UsuRol>();
			}
		}
		
		public System.Data.Linq.Table<Ciudad> Ciudad
		{
			get
			{
				return this.GetTable<Ciudad>();
			}
		}
		
		public System.Data.Linq.Table<Idioma> Idioma
		{
			get
			{
				return this.GetTable<Idioma>();
			}
		}
		
		public System.Data.Linq.Table<Nivel> Nivel
		{
			get
			{
				return this.GetTable<Nivel>();
			}
		}
		
		public System.Data.Linq.Table<Permisos> Permisos
		{
			get
			{
				return this.GetTable<Permisos>();
			}
		}
		
		public System.Data.Linq.Table<Roles> Roles
		{
			get
			{
				return this.GetTable<Roles>();
			}
		}
		
		public System.Data.Linq.Table<Salones> Salones
		{
			get
			{
				return this.GetTable<Salones>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agendamientos")]
	public partial class Agendamientos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Agendamiento;
		
		private System.Nullable<int> _UsuarioId;
		
		private System.Nullable<int> _Id_Salon;
		
		private System.Nullable<int> _Id_Nivel;
		
		private System.Nullable<int> _Id_Idioma;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private System.Nullable<System.TimeSpan> _Hora;
		
		private EntityRef<Idioma> _Idioma;
		
		private EntityRef<Nivel> _Nivel;
		
		private EntityRef<Salones> _Salones;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_AgendamientoChanging(int value);
    partial void OnId_AgendamientoChanged();
    partial void OnUsuarioIdChanging(System.Nullable<int> value);
    partial void OnUsuarioIdChanged();
    partial void OnId_SalonChanging(System.Nullable<int> value);
    partial void OnId_SalonChanged();
    partial void OnId_NivelChanging(System.Nullable<int> value);
    partial void OnId_NivelChanged();
    partial void OnId_IdiomaChanging(System.Nullable<int> value);
    partial void OnId_IdiomaChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnHoraChanging(System.Nullable<System.TimeSpan> value);
    partial void OnHoraChanged();
    #endregion
		
		public Agendamientos()
		{
			this._Idioma = default(EntityRef<Idioma>);
			this._Nivel = default(EntityRef<Nivel>);
			this._Salones = default(EntityRef<Salones>);
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Agendamiento", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Agendamiento
		{
			get
			{
				return this._Id_Agendamiento;
			}
			set
			{
				if ((this._Id_Agendamiento != value))
				{
					this.OnId_AgendamientoChanging(value);
					this.SendPropertyChanging();
					this._Id_Agendamiento = value;
					this.SendPropertyChanged("Id_Agendamiento");
					this.OnId_AgendamientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsuarioId", DbType="Int")]
		public System.Nullable<int> UsuarioId
		{
			get
			{
				return this._UsuarioId;
			}
			set
			{
				if ((this._UsuarioId != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsuarioIdChanging(value);
					this.SendPropertyChanging();
					this._UsuarioId = value;
					this.SendPropertyChanged("UsuarioId");
					this.OnUsuarioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Salon", DbType="Int")]
		public System.Nullable<int> Id_Salon
		{
			get
			{
				return this._Id_Salon;
			}
			set
			{
				if ((this._Id_Salon != value))
				{
					if (this._Salones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_SalonChanging(value);
					this.SendPropertyChanging();
					this._Id_Salon = value;
					this.SendPropertyChanged("Id_Salon");
					this.OnId_SalonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Nivel", DbType="Int")]
		public System.Nullable<int> Id_Nivel
		{
			get
			{
				return this._Id_Nivel;
			}
			set
			{
				if ((this._Id_Nivel != value))
				{
					if (this._Nivel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_NivelChanging(value);
					this.SendPropertyChanging();
					this._Id_Nivel = value;
					this.SendPropertyChanged("Id_Nivel");
					this.OnId_NivelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Idioma", DbType="Int")]
		public System.Nullable<int> Id_Idioma
		{
			get
			{
				return this._Id_Idioma;
			}
			set
			{
				if ((this._Id_Idioma != value))
				{
					if (this._Idioma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_IdiomaChanging(value);
					this.SendPropertyChanging();
					this._Id_Idioma = value;
					this.SendPropertyChanged("Id_Idioma");
					this.OnId_IdiomaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hora", DbType="Time")]
		public System.Nullable<System.TimeSpan> Hora
		{
			get
			{
				return this._Hora;
			}
			set
			{
				if ((this._Hora != value))
				{
					this.OnHoraChanging(value);
					this.SendPropertyChanging();
					this._Hora = value;
					this.SendPropertyChanged("Hora");
					this.OnHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Idioma_Agendamientos", Storage="_Idioma", ThisKey="Id_Idioma", OtherKey="Id_Idioma", IsForeignKey=true, DeleteRule="CASCADE")]
		public Idioma Idioma
		{
			get
			{
				return this._Idioma.Entity;
			}
			set
			{
				Idioma previousValue = this._Idioma.Entity;
				if (((previousValue != value) 
							|| (this._Idioma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Idioma.Entity = null;
						previousValue.Agendamientos.Remove(this);
					}
					this._Idioma.Entity = value;
					if ((value != null))
					{
						value.Agendamientos.Add(this);
						this._Id_Idioma = value.Id_Idioma;
					}
					else
					{
						this._Id_Idioma = default(Nullable<int>);
					}
					this.SendPropertyChanged("Idioma");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nivel_Agendamientos", Storage="_Nivel", ThisKey="Id_Nivel", OtherKey="Id_Nivel", IsForeignKey=true, DeleteRule="CASCADE")]
		public Nivel Nivel
		{
			get
			{
				return this._Nivel.Entity;
			}
			set
			{
				Nivel previousValue = this._Nivel.Entity;
				if (((previousValue != value) 
							|| (this._Nivel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nivel.Entity = null;
						previousValue.Agendamientos.Remove(this);
					}
					this._Nivel.Entity = value;
					if ((value != null))
					{
						value.Agendamientos.Add(this);
						this._Id_Nivel = value.Id_Nivel;
					}
					else
					{
						this._Id_Nivel = default(Nullable<int>);
					}
					this.SendPropertyChanged("Nivel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Salones_Agendamientos", Storage="_Salones", ThisKey="Id_Salon", OtherKey="Id_Salon", IsForeignKey=true, DeleteRule="CASCADE")]
		public Salones Salones
		{
			get
			{
				return this._Salones.Entity;
			}
			set
			{
				Salones previousValue = this._Salones.Entity;
				if (((previousValue != value) 
							|| (this._Salones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Salones.Entity = null;
						previousValue.Agendamientos.Remove(this);
					}
					this._Salones.Entity = value;
					if ((value != null))
					{
						value.Agendamientos.Add(this);
						this._Id_Salon = value.Id_Salon;
					}
					else
					{
						this._Id_Salon = default(Nullable<int>);
					}
					this.SendPropertyChanged("Salones");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Agendamientos", Storage="_Usuarios", ThisKey="UsuarioId", OtherKey="UsuarioId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Agendamientos.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Agendamientos.Add(this);
						this._UsuarioId = value.UsuarioId;
					}
					else
					{
						this._UsuarioId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsuRol")]
	public partial class UsuRol
	{
		
		private System.Nullable<int> _Id_Usuario;
		
		private System.Nullable<int> _Id_Rol;
		
		public UsuRol()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Usuario", DbType="Int")]
		public System.Nullable<int> Id_Usuario
		{
			get
			{
				return this._Id_Usuario;
			}
			set
			{
				if ((this._Id_Usuario != value))
				{
					this._Id_Usuario = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Rol", DbType="Int")]
		public System.Nullable<int> Id_Rol
		{
			get
			{
				return this._Id_Rol;
			}
			set
			{
				if ((this._Id_Rol != value))
				{
					this._Id_Rol = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ciudad")]
	public partial class Ciudad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CiudadId;
		
		private string _Nombre;
		
		private EntitySet<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCiudadIdChanging(int value);
    partial void OnCiudadIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Ciudad()
		{
			this._Usuarios = new EntitySet<Usuarios>(new Action<Usuarios>(this.attach_Usuarios), new Action<Usuarios>(this.detach_Usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CiudadId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CiudadId
		{
			get
			{
				return this._CiudadId;
			}
			set
			{
				if ((this._CiudadId != value))
				{
					this.OnCiudadIdChanging(value);
					this.SendPropertyChanging();
					this._CiudadId = value;
					this.SendPropertyChanged("CiudadId");
					this.OnCiudadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ciudad_Usuarios", Storage="_Usuarios", ThisKey="CiudadId", OtherKey="CiudadId")]
		public EntitySet<Usuarios> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Ciudad = this;
		}
		
		private void detach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Ciudad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Idioma")]
	public partial class Idioma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Idioma;
		
		private string _Descripcion;
		
		private EntitySet<Agendamientos> _Agendamientos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_IdiomaChanging(int value);
    partial void OnId_IdiomaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Idioma()
		{
			this._Agendamientos = new EntitySet<Agendamientos>(new Action<Agendamientos>(this.attach_Agendamientos), new Action<Agendamientos>(this.detach_Agendamientos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Idioma", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Idioma
		{
			get
			{
				return this._Id_Idioma;
			}
			set
			{
				if ((this._Id_Idioma != value))
				{
					this.OnId_IdiomaChanging(value);
					this.SendPropertyChanging();
					this._Id_Idioma = value;
					this.SendPropertyChanged("Id_Idioma");
					this.OnId_IdiomaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Idioma_Agendamientos", Storage="_Agendamientos", ThisKey="Id_Idioma", OtherKey="Id_Idioma")]
		public EntitySet<Agendamientos> Agendamientos
		{
			get
			{
				return this._Agendamientos;
			}
			set
			{
				this._Agendamientos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Agendamientos(Agendamientos entity)
		{
			this.SendPropertyChanging();
			entity.Idioma = this;
		}
		
		private void detach_Agendamientos(Agendamientos entity)
		{
			this.SendPropertyChanging();
			entity.Idioma = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nivel")]
	public partial class Nivel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Nivel;
		
		private string _Descripcion;
		
		private EntitySet<Agendamientos> _Agendamientos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_NivelChanging(int value);
    partial void OnId_NivelChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Nivel()
		{
			this._Agendamientos = new EntitySet<Agendamientos>(new Action<Agendamientos>(this.attach_Agendamientos), new Action<Agendamientos>(this.detach_Agendamientos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Nivel", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Nivel
		{
			get
			{
				return this._Id_Nivel;
			}
			set
			{
				if ((this._Id_Nivel != value))
				{
					this.OnId_NivelChanging(value);
					this.SendPropertyChanging();
					this._Id_Nivel = value;
					this.SendPropertyChanged("Id_Nivel");
					this.OnId_NivelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nivel_Agendamientos", Storage="_Agendamientos", ThisKey="Id_Nivel", OtherKey="Id_Nivel")]
		public EntitySet<Agendamientos> Agendamientos
		{
			get
			{
				return this._Agendamientos;
			}
			set
			{
				this._Agendamientos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Agendamientos(Agendamientos entity)
		{
			this.SendPropertyChanging();
			entity.Nivel = this;
		}
		
		private void detach_Agendamientos(Agendamientos entity)
		{
			this.SendPropertyChanging();
			entity.Nivel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permisos")]
	public partial class Permisos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Permisos;
		
		private string _Descripcion;
		
		private EntitySet<Roles> _Roles;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_PermisosChanging(int value);
    partial void OnId_PermisosChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Permisos()
		{
			this._Roles = new EntitySet<Roles>(new Action<Roles>(this.attach_Roles), new Action<Roles>(this.detach_Roles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Permisos", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Permisos
		{
			get
			{
				return this._Id_Permisos;
			}
			set
			{
				if ((this._Id_Permisos != value))
				{
					this.OnId_PermisosChanging(value);
					this.SendPropertyChanging();
					this._Id_Permisos = value;
					this.SendPropertyChanged("Id_Permisos");
					this.OnId_PermisosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permisos_Roles", Storage="_Roles", ThisKey="Id_Permisos", OtherKey="Id_Permisos")]
		public EntitySet<Roles> Roles
		{
			get
			{
				return this._Roles;
			}
			set
			{
				this._Roles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Roles(Roles entity)
		{
			this.SendPropertyChanging();
			entity.Permisos = this;
		}
		
		private void detach_Roles(Roles entity)
		{
			this.SendPropertyChanging();
			entity.Permisos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Rol;
		
		private System.Nullable<int> _Id_Permisos;
		
		private string _Descripcion;
		
		private System.Nullable<bool> _Estado;
		
		private EntityRef<Permisos> _Permisos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_RolChanging(int value);
    partial void OnId_RolChanged();
    partial void OnId_PermisosChanging(System.Nullable<int> value);
    partial void OnId_PermisosChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnEstadoChanging(System.Nullable<bool> value);
    partial void OnEstadoChanged();
    #endregion
		
		public Roles()
		{
			this._Permisos = default(EntityRef<Permisos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Rol", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Rol
		{
			get
			{
				return this._Id_Rol;
			}
			set
			{
				if ((this._Id_Rol != value))
				{
					this.OnId_RolChanging(value);
					this.SendPropertyChanging();
					this._Id_Rol = value;
					this.SendPropertyChanged("Id_Rol");
					this.OnId_RolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Permisos", DbType="Int")]
		public System.Nullable<int> Id_Permisos
		{
			get
			{
				return this._Id_Permisos;
			}
			set
			{
				if ((this._Id_Permisos != value))
				{
					if (this._Permisos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_PermisosChanging(value);
					this.SendPropertyChanging();
					this._Id_Permisos = value;
					this.SendPropertyChanged("Id_Permisos");
					this.OnId_PermisosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(10)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Bit")]
		public System.Nullable<bool> Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permisos_Roles", Storage="_Permisos", ThisKey="Id_Permisos", OtherKey="Id_Permisos", IsForeignKey=true, DeleteRule="CASCADE")]
		public Permisos Permisos
		{
			get
			{
				return this._Permisos.Entity;
			}
			set
			{
				Permisos previousValue = this._Permisos.Entity;
				if (((previousValue != value) 
							|| (this._Permisos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permisos.Entity = null;
						previousValue.Roles.Remove(this);
					}
					this._Permisos.Entity = value;
					if ((value != null))
					{
						value.Roles.Add(this);
						this._Id_Permisos = value.Id_Permisos;
					}
					else
					{
						this._Id_Permisos = default(Nullable<int>);
					}
					this.SendPropertyChanged("Permisos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Salones")]
	public partial class Salones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Salon;
		
		private string _NroSalon;
		
		private EntitySet<Agendamientos> _Agendamientos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_SalonChanging(int value);
    partial void OnId_SalonChanged();
    partial void OnNroSalonChanging(string value);
    partial void OnNroSalonChanged();
    #endregion
		
		public Salones()
		{
			this._Agendamientos = new EntitySet<Agendamientos>(new Action<Agendamientos>(this.attach_Agendamientos), new Action<Agendamientos>(this.detach_Agendamientos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Salon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Salon
		{
			get
			{
				return this._Id_Salon;
			}
			set
			{
				if ((this._Id_Salon != value))
				{
					this.OnId_SalonChanging(value);
					this.SendPropertyChanging();
					this._Id_Salon = value;
					this.SendPropertyChanged("Id_Salon");
					this.OnId_SalonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroSalon", DbType="VarChar(20)")]
		public string NroSalon
		{
			get
			{
				return this._NroSalon;
			}
			set
			{
				if ((this._NroSalon != value))
				{
					this.OnNroSalonChanging(value);
					this.SendPropertyChanging();
					this._NroSalon = value;
					this.SendPropertyChanged("NroSalon");
					this.OnNroSalonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Salones_Agendamientos", Storage="_Agendamientos", ThisKey="Id_Salon", OtherKey="Id_Salon")]
		public EntitySet<Agendamientos> Agendamientos
		{
			get
			{
				return this._Agendamientos;
			}
			set
			{
				this._Agendamientos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Agendamientos(Agendamientos entity)
		{
			this.SendPropertyChanging();
			entity.Salones = this;
		}
		
		private void detach_Agendamientos(Agendamientos entity)
		{
			this.SendPropertyChanging();
			entity.Salones = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UsuarioId;
		
		private string _Cedula;
		
		private string _Nombres;
		
		private string _Apellido1;
		
		private string _Apellido2;
		
		private string _Direccion;
		
		private char _Sexo;
		
		private string _Email;
		
		private string _Telefono;
		
		private int _Edad;
		
		private string _Clave;
		
		private System.DateTime _FechaIngreso;
		
		private string _Estado;
		
		private int _CiudadId;
		
		private EntitySet<Agendamientos> _Agendamientos;
		
		private EntityRef<Ciudad> _Ciudad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsuarioIdChanging(int value);
    partial void OnUsuarioIdChanged();
    partial void OnCedulaChanging(string value);
    partial void OnCedulaChanged();
    partial void OnNombresChanging(string value);
    partial void OnNombresChanged();
    partial void OnApellido1Changing(string value);
    partial void OnApellido1Changed();
    partial void OnApellido2Changing(string value);
    partial void OnApellido2Changed();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnSexoChanging(char value);
    partial void OnSexoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnEdadChanging(int value);
    partial void OnEdadChanged();
    partial void OnClaveChanging(string value);
    partial void OnClaveChanged();
    partial void OnFechaIngresoChanging(System.DateTime value);
    partial void OnFechaIngresoChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnCiudadIdChanging(int value);
    partial void OnCiudadIdChanged();
    #endregion
		
		public Usuarios()
		{
			this._Agendamientos = new EntitySet<Agendamientos>(new Action<Agendamientos>(this.attach_Agendamientos), new Action<Agendamientos>(this.detach_Agendamientos));
			this._Ciudad = default(EntityRef<Ciudad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsuarioId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UsuarioId
		{
			get
			{
				return this._UsuarioId;
			}
			set
			{
				if ((this._UsuarioId != value))
				{
					this.OnUsuarioIdChanging(value);
					this.SendPropertyChanging();
					this._UsuarioId = value;
					this.SendPropertyChanged("UsuarioId");
					this.OnUsuarioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this.OnCedulaChanging(value);
					this.SendPropertyChanging();
					this._Cedula = value;
					this.SendPropertyChanged("Cedula");
					this.OnCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombres", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombres
		{
			get
			{
				return this._Nombres;
			}
			set
			{
				if ((this._Nombres != value))
				{
					this.OnNombresChanging(value);
					this.SendPropertyChanging();
					this._Nombres = value;
					this.SendPropertyChanged("Nombres");
					this.OnNombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellido1
		{
			get
			{
				return this._Apellido1;
			}
			set
			{
				if ((this._Apellido1 != value))
				{
					this.OnApellido1Changing(value);
					this.SendPropertyChanging();
					this._Apellido1 = value;
					this.SendPropertyChanged("Apellido1");
					this.OnApellido1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido2", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellido2
		{
			get
			{
				return this._Apellido2;
			}
			set
			{
				if ((this._Apellido2 != value))
				{
					this.OnApellido2Changing(value);
					this.SendPropertyChanging();
					this._Apellido2 = value;
					this.SendPropertyChanged("Apellido2");
					this.OnApellido2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="Char(1) NOT NULL")]
		public char Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this.OnSexoChanging(value);
					this.SendPropertyChanging();
					this._Sexo = value;
					this.SendPropertyChanged("Sexo");
					this.OnSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edad", DbType="Int NOT NULL")]
		public int Edad
		{
			get
			{
				return this._Edad;
			}
			set
			{
				if ((this._Edad != value))
				{
					this.OnEdadChanging(value);
					this.SendPropertyChanging();
					this._Edad = value;
					this.SendPropertyChanged("Edad");
					this.OnEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clave", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Clave
		{
			get
			{
				return this._Clave;
			}
			set
			{
				if ((this._Clave != value))
				{
					this.OnClaveChanging(value);
					this.SendPropertyChanging();
					this._Clave = value;
					this.SendPropertyChanged("Clave");
					this.OnClaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaIngreso", DbType="Date NOT NULL")]
		public System.DateTime FechaIngreso
		{
			get
			{
				return this._FechaIngreso;
			}
			set
			{
				if ((this._FechaIngreso != value))
				{
					this.OnFechaIngresoChanging(value);
					this.SendPropertyChanging();
					this._FechaIngreso = value;
					this.SendPropertyChanged("FechaIngreso");
					this.OnFechaIngresoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CiudadId", DbType="Int NOT NULL")]
		public int CiudadId
		{
			get
			{
				return this._CiudadId;
			}
			set
			{
				if ((this._CiudadId != value))
				{
					if (this._Ciudad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCiudadIdChanging(value);
					this.SendPropertyChanging();
					this._CiudadId = value;
					this.SendPropertyChanged("CiudadId");
					this.OnCiudadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Agendamientos", Storage="_Agendamientos", ThisKey="UsuarioId", OtherKey="UsuarioId")]
		public EntitySet<Agendamientos> Agendamientos
		{
			get
			{
				return this._Agendamientos;
			}
			set
			{
				this._Agendamientos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ciudad_Usuarios", Storage="_Ciudad", ThisKey="CiudadId", OtherKey="CiudadId", IsForeignKey=true)]
		public Ciudad Ciudad
		{
			get
			{
				return this._Ciudad.Entity;
			}
			set
			{
				Ciudad previousValue = this._Ciudad.Entity;
				if (((previousValue != value) 
							|| (this._Ciudad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ciudad.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._Ciudad.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._CiudadId = value.CiudadId;
					}
					else
					{
						this._CiudadId = default(int);
					}
					this.SendPropertyChanged("Ciudad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Agendamientos(Agendamientos entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Agendamientos(Agendamientos entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
	}
}
#pragma warning restore 1591
